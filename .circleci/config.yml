# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.8
  ruby: circleci/ruby@2.1.0
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: cimg/ruby:3.3.7-browsers
         environment:
           PGHOST: 127.0.0.1
           RAILS_ENV: test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: cimg/postgres:11.12
         environment:
           POSTGRES_HOST_AUTH_METHOD: trust
       - image: cimg/redis:6.2.6

    working_directory: ~/repo

    steps:
      - checkout
      # Install Chrome using the browser-tools orb
      - browser-tools/install-chrome

      # Install ChromeDriver using the browser-tools orb
      - browser-tools/install-chromedriver

      # Check installation of Chrome and ChromeDriver
      - run:
          name: Check install
          command: |
            google-chrome --version
            chromedriver --version

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Force Bundler Version
          command: |
            sudo gem update --system
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      #- run: bundle exec rake db:create db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb")"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
